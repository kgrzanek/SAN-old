dup
install.packages(c("backports", "bayesplot", "bookdown", "d3r", "dbplyr", "dplyr", "ellipsis", "ggplot2", "glue", "hardhat", "haven", "httpuv", "keras", "modelr", "nlme", "pkgload", "RcppArmadillo", "reticulate", "rmarkdown", "rstantools", "rversions", "scales", "shinyWidgets", "StanHeaders", "tensorflow", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun"))
install.packages(c("dials", "httpuv", "later", "lubridate", "promises", "RcppArmadillo", "rsample", "SQUAREM", "StanHeaders", "vctrs"))
install.packages(c("backports", "bookdown", "DT", "fs", "ggplot2", "gower", "htmltools", "infer", "isoband", "jsonlite", "knitr", "openssl", "RcppParallel", "recipes", "rmarkdown", "roxygen2", "sf", "shiny", "survival", "tidyposterior", "tinytex", "units", "xfun"))
install.packages(c("broom", "data.table", "devtools", "dials", "dplyr", "future", "hardhat", "httr", "infer", "loo", "nloptr", "parsnip", "pillar", "pkgbuild", "processx", "quanteda", "Rcpp", "RcppArmadillo", "remotes", "rlang", "rstan", "rstanarm", "rstantools", "rvest", "sf", "shinycssloaders", "stringdist", "sunburstR", "sys", "tibble", "tidymodels", "tidypredict", "tidyr", "tidytext", "tinytex", "tune", "vctrs", "workflows", "xfun", "yardstick"))
install.packages("fs")
library(data.table)
data.table(x = rnorm(1000L))
dt1 <- data.table(x = rnorm(1000L))
dt1
View(dt1)
str(dt1)
pryr::object_size(dt1)
pryr::object_size(dt1[[x]])
dt1[x]
dt1[(x)]
dt1[.(x)]
dt1[.x]
dt1[, .(x)]
dt1[, x]
str(dt1[, x])
is.double(dt1[, x])
install.packages(c("backports", "cpp11", "dplyr", "DT", "glue", "kableExtra", "MASS", "mgcv", "nlme", "parsnip", "ps", "SQUAREM", "StanHeaders", "tidyr", "vctrs", "workflows", "zip"))
install.packages("learnr")
summary([1, 2, 3, 4, 5, 6])
summary(c(1, 2, 3, 4, 5, 6))
5000 - 4904.70
install.packages(c("backports", "callr", "colourpicker", "covr", "devtools", "dials", "future", "globals", "inline", "jsonlite", "knitr", "lava", "MASS", "matrixStats", "openssl", "openxlsx", "processx", "quanteda", "RcppArmadillo", "rsample", "sf", "shinyalert", "shinyjs", "stringi", "survival", "tidytext", "tinytex", "usethis", "withr", "workflows", "xfun", "xmlparsedata", "xts"))
install.packages(c("bookdown", "broom", "callr", "cli", "clipr", "coda", "cpp11", "furrr", "globals", "h2o", "htmlwidgets", "igraph", "lhs", "network", "ps", "readr", "rlang", "rmarkdown", "shinyWidgets", "sna", "statnet.common", "stringdist", "sunburstR", "tibble", "tidypredict", "workflows"))
install.packages(c("bookdown", "broom", "codetools", "cpp11", "DT", "e1071", "foreach", "furrr", "htmlwidgets", "igraph", "iterators", "lhs", "network", "ps", "readr", "rlang", "rmarkdown", "shinyWidgets", "sna", "statnet.common", "stringdist", "sunburstR", "tibble", "tidypredict", "workflows"))
install.packages("quanteda")
install.packages(c("broom", "data.table", "digest", "furrr", "generics", "kableExtra", "KernSmooth", "labeling", "lme4", "modeldata", "nlme", "openxlsx", "parsnip", "R6", "RcppArmadillo", "recipes", "reticulate", "rmarkdown", "SQUAREM", "statmod", "testthat", "tidypredict", "tinytex", "warp", "xfun"))
install.packages(c("backports", "codetools", "colorspace", "cpp11", "dbplyr", "future", "hardhat", "lava", "recipes", "renv", "rstudioapi", "waldo"))
dplyr
dplyr::tibble(x = 1:10)
dplyr::tibble(x = 1:10, y = c("a"))
tbl1 <- dplyr::tibble(x = 1:10, y = c("a"))
tbl1
library(purrr)
tbl1
View(tbl1)
dplyr
install.packages("bench")
bench::mark(1 + 2)
sessioninfo::session_info()
install.packages("learnr")
install.packages("shiny")
install.packages("learnr")
install.packages("data.table")
install.packages("tidyverse")
install.packages("purrr")
install.packages("lubridate")
install.packages("benchmarkme")
res <- benchmark_std()
library(benchmarkme)
res <- benchmark_std()
upload_results(res)
plot(res)
library(benchmarkme)
res <- benchmark_std()
upload_results(res)
plot(res)
install.packages(c("cli", "gh", "isoband", "magrittr", "pillar", "processx", "renv", "rlang", "rprojroot", "vctrs"))
1 + 2
install.packages("data.table")
install.packages("tidyverse")
install.packages("stringi")
install.packages("tidyverse")
install.packages(c("backports", "bench", "benchmarkme", "BH", "blob", "brew", "brio", "checkmate", "clipr", "colorspace", "commonmark", "covr", "crayon", "crosstalk", "curl", "DBI", "desc", "devtools", "diffobj", "digest", "doParallel", "DT", "ellipsis", "evaluate", "fansi", "farver", "fastmap", "foreach", "fs", "future", "generics", "gh", "git2r", "gitcreds", "globals", "gtable", "hexbin", "highr", "htmltools", "htmlwidgets", "httpuv", "isoband", "iterators", "knitr", "later", "learnr", "listenv", "markdown", "memoise", "microbenchmark", "mime", "openssl", "openxlsx", "parallelly", "pkgbuild", "pkgload", "plotly", "profmem", "promises", "proxy", "pryr", "ps", "R6", "rappdirs", "rcmdcheck", "RColorBrewer", "Rcpp", "remotes", "renv", "rex", "rmarkdown", "roxygen2", "rprojroot", "rversions", "sessioninfo", "shiny", "shinydashboard", "shinyjs", "shinyWidgets", "sourcetools", "sys", "testthat", "tinytex", "usethis", "utf8", "viridisLite", "waldo", "whisker", "xfun", "yaml", "zip"))
install.packages("curl")
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
install.packages("arrow")
arrow::arrow_info()
rgeom(100, 200)
rgeom(1:1000, 200)
rgeom(10, 1)
rgeom(10, 1:5)
rgeom(10, 1L)
rgeom(1:5, 1L)
?rgeom
1 + 2
install.packages(c("broom", "bslib", "curl", "gargle", "googledrive", "googlesheets4", "pkgbuild", "vctrs"))
rnorm(10000)
library(ggplot2)
library(data.table)
data <- data.table(values = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
View(data)
# Calculate cumulative frequencies
data$cumulative_freq <- cumsum(data$values)
View(data)
data$cumulative_freq <- cumsum(data$values)
data$cumulative_prop <- data$cumulative_freq / sum(data$values)
View(data)
ggplot(data, aes(x = values, y = cumulative_prop)) +
geom_step() +
labs(x = "Values", y = "Cumulative Proportions", title = "Cumulative Frequency Curve")
ggplot(data, aes(x = values, y = cumulative_prop)) +
# geom_step() +
geom_line() +
labs(x = "Values", y = "Cumulative Proportions", title = "Cumulative Frequency Curve")
1 + 2
install.packages("data.table")
library(data.table)
data.table(x = 1:100L)
install.packages("tidyverse")
1 + 2
library(datasets.table)
library(data.table)
install.packages("data.table")
library(data.table)
detach("package:data.table", unload = TRUE)
1 + 2
1 + 2
xs <- rnorm(1000)
xs
xs
mean(xs)
median(xs)
max()
max(xs)
min
min(xs)
plot(xs)
plot(xs)
library(data.table)
library(data.table)
dt1 <- data.table(i = 1:1000, x = rnorm(1000))
dt
dt1
View(dt1)
plot(x = dt1$i, y = dt1$x)
gc()
gc()
install.packages("data.table")
library(data.table)
setwd("~/Devel/Projects/SAN/2024 zimowy/Dzienne/Warstwy integracji i Big Data - 7 sem.")
dt1 <- fread("nazwiska_męskie-osoby_żyjące.csv")
summary(dt1)
dt1[`Nazwisko aktualne` == 'GRZANEK']
dt2 <- fread("nazwiska_żeńskie-osoby_żyjące.csv")
summary(dt2)
dt2[`Nazwisko aktualne` == 'GRZANEK']
install.packages("stringr")
install.packages("tidyverse")
library(purrr)
